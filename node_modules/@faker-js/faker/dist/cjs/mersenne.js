var f=Object.create;var o=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,y=Object.prototype.hasOwnProperty;var c=(r,e)=>{for(var t in e)o(r,t,{get:e[t],enumerable:!0})},a=(r,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of h(e))!y.call(r,n)&&n!==t&&o(r,n,{get:()=>e[n],enumerable:!(s=d(e,n))||s.enumerable});return r};var p=(r,e,t)=>(t=r!=null?f(m(r)):{},a(e||!r||!r.__esModule?o(t,"default",{value:r,enumerable:!0}):t,r)),b=r=>a(o({},"__esModule",{value:!0}),r);var g={};c(g,{Mersenne:()=>i});module.exports=b(g);var u=p(require("./vendor/mersenne"));class i{constructor(){this.gen=new u.default;this.gen.initGenrand(new Date().getTime()%1e9);for(const e of Object.getOwnPropertyNames(i.prototype))e==="constructor"||typeof this[e]!="function"||(this[e]=this[e].bind(this))}rand(e,t){return e===void 0&&(t=0,e=32768),Math.floor(this.gen.genrandReal2()*(e-t)+t)}seed(e){if(typeof e!="number")throw new Error("seed(S) must take numeric argument; is "+typeof e);this.gen.initGenrand(e)}seed_array(e){if(typeof e!="object")throw new Error("seed_array(A) must take array of numbers; is "+typeof e);this.gen.initByArray(e,e.length)}}0&&(module.exports={Mersenne});
